PROCEDURE doBookmark
      (* doBookmark 7/23/23 - restart 2/1/24
      (* recnum - <0 save  0 menu  >0 return record
      TYPE bookmarks=server,page,title:STRING[144]
      DIM instr,zerver,zage,zitle:STRING[144]
      DIM spacr:STRING[40]
      DIM path:BYTE
      DIM int1,int2,fn2,doloc,dopag,lastpag,readloc,reclen,rectot:INTEGER
      DIM debug,PgFlg:BOOLEAN
      PARAM filename:STRING[80]
      PARAM recnum:INTEGER
      PARAM bookmark:bookmarks
      reclen:=SIZE(bookmark) \rectot:=0 \spacr:="                    "
      spacr:=spacr+spacr
      doloc:=1
      ON ERROR GOTO 1000
 10   zerver:=bookmark.server \zage:=bookmark.page
      zitle:=bookmark.title
      OPEN #path,"/dd/SYS/"+filename:UPDATE
      ON ERROR 
      SEEK #path,0 \ GET #path,bookmark
      reclen:=VAL(bookmark.page)
      rectot:=VAL(bookmark.title)
      IF filename="link.www" OR filename="history.www" THEN 
        IF recnum<0 THEN 110
        IF recnum>0 THEN 
          SEEK #path,recnum*reclen \ GET #path,bookmark
          CLOSE #path \RUN gfx2("owend") \ END 
        ENDIF 
      ENDIF 
      
      dopag:=0 \doloc:=1
      (* IF filename<>"bookmark.www" THEN  \(* reverse order
      (* dopag:=INT(rectot/10) \doloc:=rectot
      (* ENDIF 
      lastpag:=INT(rectot/10) \PgFlg:=TRUE \(* note fixed page size
      RUN gfx2("owset",1,5,5,70,14,1,2)
      doloc:=1
      LOOP 
        IF PgFlg=TRUE THEN 
          PgFlg:=FALSE \RUN gfx2("clear")
          PRINT filename
          int1:=1 \int2:=10
          IF rectot<10 THEN 
            int2:=rectot
          ENDIF 
          FOR fn2=int1 TO int2
            readloc:=fn2+dopag*10
            IF readloc<=rectot THEN 
              SEEK #path,readloc*reclen \ GET #path,bookmark
              PRINT "  "; LEFT$(bookmark.title,35); " -- "; bookmark.server; "/"; bookmark.page
            ENDIF 
          NEXT fn2
          RUN gfx2("curxy",0,doloc) \RUN gfx2("revon")
          PRINT " ";  \RUN gfx2("revoff")
        ENDIF 
        RUN gfx2("curxy",0,11) \RUN gfx2("revon")
        PRINT LEFT$(spacr,27); "Keys: <D>elete <A>dd <E>dit <ENTER>"; LEFT$(spacr,27)
        PRINT LEFT$(spacr,15); "Arrows: up, down move one line.  left, right move one page"; LEFT$(spacr,15); 
        RUN gfx2("revoff") \instr:=""
        WHILE instr="" DO  \RUN bnkey(instr) \ ENDWHILE 
        RUN gfx2("curxy",0,doloc) \RUN gfx2("revoff")
        PRINT " ";  \RUN gfx2("revon")
        IF instr=CHR$(12) THEN 
          PgFlg:=TRUE \doloc:=doloc-1
        ENDIF 
        IF instr=CHR$(10) THEN  \doloc:=doloc+1 \ ENDIF 
        IF doloc>10 THEN 
          doloc:=1 \dopag:=dopag+1 \PgFlg:=TRUE
        ENDIF 
        IF doloc<1 THEN 
          doloc:=10 \dopag:=dopag-1 \PgFlg:=TRUE
        ENDIF 
        IF instr=CHR$(9) THEN 
          dopag:=dopag+1 \PgFlg:=TRUE
        ENDIF 
        IF instr=CHR$(8) THEN 
          dopag:=dopag-1 \PgFlg:=TRUE
        ENDIF 
        IF dopag<0 THEN  \dopag:=lastpag \ ENDIF 
        IF dopag>lastpag THEN  \dopag:=0 \ ENDIF 
        readloc:=dopag*10+doloc-1
        IF readloc=0 THEN  \readloc:=1 \ ENDIF 
        RUN gfx2("curxy",0,doloc) \RUN gfx2("revon")
        PRINT " ";  \RUN gfx2("revoff")
        readloc:=dopag*10+doloc
        IF instr=CHR$(13) THEN 
          readloc:=dopag*10+doloc
          SEEK #path,readloc*reclen \ GET #path,bookmark
          CLOSE #path \RUN gfx2("owend") \ END 
        ENDIF 
        IF instr="e" OR instr="E" THEN 
          SEEK #path,readloc*reclen \ GET #path,bookmark
          PgFlg:=TRUE \RUN gfx2("clear")
          PRINT "  Title: "; bookmark.title
          INPUT "New title?(ENTER to keep): ",instr
          IF instr<>"" THEN  \bookmark.title:=instr \ ENDIF 
          PRINT "  Server: "; bookmark.server
          INPUT "New server?(ENTER to keep): ",instr
          IF instr<>"" THEN 
            GOSUB 100 \bookmark.server:=instr
          ENDIF 
          PRINT "  Page: "; bookmark.page
          INPUT "New page link?(ENTER to keep): ",instr
          IF instr<>"" THEN  \bookmark.page:=instr \ ENDIF 
          SEEK #path,readloc*reclen
          PUT #path,bookmark
        ELSE 
          IF instr="d" OR instr="D" THEN 
            PgFlg:=TRUE
            FOR readloc=doloc+1 TO rectot
              SEEK #path,readloc*reclen \ GET #path,bookmark
              SEEK #path,(readloc-1)*reclen \ PUT #path,bookmark
            NEXT readloc
            rectot:=rectot-1
            GOSUB 120 \(* doHeader
          ELSE 
            IF instr="a" OR instr="A" THEN 
              PgFlg:=TRUE \RUN gfx2("clear")
              INPUT "Enter a title for the new bookmark: ",instr
              bookmark.title:=instr
              INPUT "Enter the URL for new bookmark: ",instr
              GOSUB 100 \int1:=SUBSTR("/",instr)
              IF int1<>0 THEN 
                bookmark.server:=LEFT$(instr,int1-1)
                bookmark.page:=MID$(instr,int1+1,LEN(instr)-int1)
              ELSE 
                bookmark.server:=instr
                bookmark.page:="index.html"
              ENDIF 
              FOR readloc=recnum TO doloc STEP -1 \(* open a gap
                SEEK #path,readloc*reclen \ GET #path,bookmark
                SEEK #path,(readloc+1)*reclen \ PUT #path,bookmark
              NEXT readloc
              SEEK #path,doloc*reclen \ PUT #path,bookmark
              PgFlg:=TRUE \rectot:=rectot+1
              GOSUB 120 \(* write header
            ENDIF 
          ENDIF 
        ENDIF 
      ENDLOOP 
      RUN gfx2("owend")
      END 
 100  IF LEFT$(instr,4)="http" THEN 
        instr:=MID$(instr,SUBSTR("//",instr)+2,144)
      ENDIF 
      RETURN 
 110  (* add record
      bookmark.server:=zerver \bookmark.page:=zage
      bookmark.title:=zitle \rectot:=rectot+1
      SEEK #path,rectot*reclen \ PUT #path,bookmark
      GOSUB 120 \(* write header
      CLOSE #path \ END 
 120  (* doHeader
      zerver:=bookmark.server \zage:=bookmark.page
      zitle:=bookmark.title
      bookmark.server:="reclen rectot"
      bookmark.page:=STR$(reclen)
      bookmark.title:=STR$(rectot)
      SEEK #path,0 \ PUT #path,bookmark
      bookmark.server:=zerver \bookmark.page:=zage
      bookmark.title:=zitle
      RETURN 
      
 1000 (* create file if not found
      int1:=ERR
      IF int1=216 THEN 
        CREATE #path,"/dd/SYS/"+filename:WRITE
        GOSUB 120
        CLOSE #path
        GOTO 10
      ELSE 
        PRINT "error: "; int1
        ON ERROR 
        PAUSE 
      ENDIF 
      RUN gfx2("owend")
      END 
